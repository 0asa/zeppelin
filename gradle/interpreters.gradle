/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

task createInterpretorsDirectory(dependsOn: ['build']) {
  def rootInterpretorsPath = new File(rootDir, 'interpreters')
  if( !rootInterpretorsPath.exists() ) {
    rootInterpretorsPath.mkdirs() 
  }
}

task interpreter(type: Copy, dependsOn: ['build']) {
  createInterpretorsDirectory
  
  def interpretorsPath = new File(rootDir, "interpreters/${project.name}")
  if( !interpretorsPath.exists() ) {
    interpretorsPath.mkdirs()
  }
  
  into "${rootProject.projectDir}/interpreters/${project.name}"
  from configurations.runtime
  exclude 'zepp**'
  exclude 'gson**'
  exclude 'guava**'
  exclude 'reflections**'
  exclude 'xml-apis**'
  exclude 'commons-configuration**'
  exclude 'commons-io**'
  exclude 'commons-lang**'
  exclude 'commons-logg**'
  exclude 'dom**'
  exclude 'javassist**'
  exclude 'slf4j**'
  exclude 'log4j**'
  
  into "${rootProject.projectDir}/interpreters/${project.name}"
  from "${rootProject.projectDir}/${project.name}/build/libs"
  
  doLast {
    def proj = project.name
    if (project.name == "markdown") {
      proj = "md"
    }
    if (project.name == "shell") {
      proj = "sh"
    }
    file("${rootProject.projectDir}/interpreters/${project.name}").renameTo("${rootProject.projectDir}/interpreters/$proj")
  }
  
}

